import React, { useState } from "react";
import axios from "axios";
import './Gpt.css'; // Importing the updated CSS file

const StoryCreator = () => {
  const [prompt, setPrompt] = useState(""); // User input for story idea
  const [story, setStory] = useState(""); // Generated story content
  const [loading, setLoading] = useState(false); // Loader state
  const [currentPage, setCurrentPage] = useState(0); // Track current page to display

  const handleGenerateStory = async () => {
    if (!prompt.trim()) return alert("‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞ï‡∞• ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞í‡∞ï ‡∞Ü‡∞≤‡±ã‡∞ö‡∞® ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡∞Ç‡∞ö‡∞Ç ‡∞é‡∞Ç‡∞ü‡∞∞‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø!");

    setLoading(true);
    try {
      const response = await axios.post(
        "https://api.openai.com/v1/chat/completions",
        {
          model: "gpt-4",
          messages: [
            { role: "system", content: "You are a Telugu story writer. Write a complete, meaningful children's story in Telugu with a clear title, summary, story, and moral." },
            { role: "user", content: `Generate a complete Telugu story with title, summary, and moral based on this idea: ${prompt}.` },
          ],
          max_tokens: 1000,
        },
        {
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,
          },
        }
      );

      const generatedStory = response.data.choices[0].message.content;
      setStory(generatedStory);
    } catch (error) {
      console.error("Error generating story:", error);
      alert("‡∞è‡∞¶‡±ã ‡∞§‡∞™‡±ç‡∞™‡±Å ‡∞ú‡∞∞‡∞ø‡∞ó‡∞ø‡∞Ç‡∞¶‡∞ø. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.");
    }
    setLoading(false);
  };

  const handleNextPage = () => {
    setCurrentPage((prevPage) => Math.min(prevPage + 1, 3)); // Limits to 4 pages
  };

  const handlePrevPage = () => {
    setCurrentPage((prevPage) => Math.max(prevPage - 1, 0));
  };

  const splitStory = story.split("\n");

  return (
    <div className="container">
      <div className="chat-box">
        <h1 className="title">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞ï‡∞• ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞ï‡∞∞‡±ç‡∞§</h1>

        <textarea
          className="textarea"
          rows="5"
          placeholder="‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞ï‡∞• ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞Ü‡∞≤‡±ã‡∞ö‡∞® ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡∞Ç‡∞ö‡∞Ç ‡∞é‡∞Ç‡∞ü‡∞∞‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø..."
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
        ></textarea>

        <button
          className={`generate-button ${loading ? "loading" : ""}`}
          onClick={handleGenerateStory}
          disabled={loading}
        >
          {loading ? "‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±Å‡∞§‡±ã‡∞Ç‡∞¶‡∞ø..." : "‡∞ï‡∞• ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø"}
        </button>
      </div>

      {story && (
        <div className="story-container">
          <div className="story-section">
            {currentPage === 0 && (
              <div>
                <h2 className="story-heading">üìù ‡∞∂‡±Ä‡∞∞‡±ç‡∞∑‡∞ø‡∞ï</h2>
                <p>{splitStory[0]}</p>
              </div>
            )}
            {currentPage === 1 && (
              <div>
                <h2 className="story-heading">üìú ‡∞ï‡∞• - ‡∞≠‡∞æ‡∞ó‡∞Ç 1</h2>
                <p>{splitStory.slice(1, 2).join("\n")}</p>
              </div>
            )}
            {currentPage === 2 && (
              <div>
                <h2 className="story-heading">üìú ‡∞ï‡∞• - ‡∞≠‡∞æ‡∞ó‡∞Ç 2</h2>
                <p>{splitStory.slice(2, 3).join("\n")}</p>
              </div>
            )}
            {currentPage === 3 && (
              <div>
                <h2 className="story-heading">üìñ ‡∞™‡∞æ‡∞†‡∞Ç</h2>
                <p>{splitStory[splitStory.length - 1]}</p>
              </div>
            )}
          </div>

          <div className="navigation">
            {currentPage > 0 && (
              <button className="nav-button" onClick={handlePrevPage}>‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å</button>
            )}
            {currentPage < 3 && (
              <button className="nav-button" onClick={handleNextPage}>‡∞§‡∞∞‡±Å‡∞µ‡∞æ‡∞§</button>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default StoryCreator;
